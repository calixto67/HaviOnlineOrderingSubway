
@model HaviOnlineOrdering2018.BLL.CustomerBLL
@{
    
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<link rel="stylesheet" type="text/css" href="~/Content/datatables.min.css" />
<script type="text/javascript" src="~/Scripts/datatables.min.js"></script>
<script src="~/Scripts/havicustom.js"></script>

<script type="text/javascript">

    window.onbeforeunload = function (e) {
        if (typeof (postBack) != "undefined" && postBack == true)
            return;
        if (hasChanges()) {
            document.getElementById('<%=btnConfirm.ClientID%>').click();

        }
    }


    $(function () {

        var dateNow = new Date();
        $("#OrderDate").datetimepicker({
            defaultDate: dateNow
        });

        var dateToday = new Date();
        var tomorrow = new Date();
        tomorrow.setDate(dateToday.getDate() + 1);
        $("#SpecialDeliveryDate").datetimepicker({
            format: "MM/DD/YYYY"
        });
        $("#OrderDate").data("DateTimePicker").disable();

        if (!$('#IsSpecialOrder')[0].checked) {
            $("#SpecialDeliveryDate").data("DateTimePicker").clear();
        }
        else {
            if ($("#SpecialDeliveryDate").val() != "") {
                $("#SpecialDeliveryDate").data('DateTimePicker').minDate(tomorrow);
            }
            else {
                $("#SpecialDeliveryDate").data('DateTimePicker').minDate(tomorrow);
                $("#SpecialDeliveryDate").data("DateTimePicker").clear();
            }
            
        }


        $('#tblCart')
               .addClass('nowrap')


        $('#confirmdel').click(function (e) {
            var item = $("#wrin")[0].innerText;
            location.href = '@Url.Action("DeleteItem", "Home")?itemcode=' + item;
        });

        $(".item-input").focusout(function (e) {

            var $row = $(this).closest("tr");       // Finds the closest row <tr>
            var $tds = $row.find("td");             // Finds all children <td> elements


            var avgqty = parseInt($($tds[7]).text().toString().trim()); //Avg Order Qty
            var qty = parseInt($($($tds[6]).find("input")[0]).val()); // Order Qty

            if (avgqty != null || avgqty != isNaN) {
                if (qty != null && qty > avgqty) {
                    $($row).css("background", "#ee8812");
                    $("#avgp").css("display", "block");
                }
                else {
                    $($row).removeAttr('style');
                    $("#avgp").css("display", CheckIfOrderExceed() ? "block" : "none");
                }
            }
        });

        if (CheckIfOrderExceed()) {
            $("#avgp").css("display", "block");
        }


        $("button[type='submit']").click(function () {
            return confirm('Are you sure you want to submit your order?');
        });


        $('#DeletePrompt').on('show.bs.modal', function (e) {
            var itemcode = $(e.relatedTarget).data('itemcode');
            $("#wrin").html("<b>" + itemcode + "</b>");
        });


        var ttlitems = oTable.api().rows().count();

        if (ttlitems == 0) {
            $("button[type='submit']").hide();
        }
        else {
            $("button[type='submit']").show();
        }

        $('#IsSpecialOrder').change(function (e) {

            var specdeldate = $('#SpecialDeliveryDate').data('DateTimePicker');
            if (this.checked) {
                specdeldate.enable()
                $("#SpecialDeliveryDate").data('DateTimePicker').minDate(tomorrow);
            }
            else {
                specdeldate.disable();
                specdeldate.clear();
            }
            $.ajax({
                url: '/Home/UpdateShoppingCart',
                type: 'POST',
                data: getShoppingCartData(this),
                dataType: 'json',
                success: function (data) {

                },
                error: function () {
                    alert("error");
                }
            });

        });

        $('#SpecialDeliveryDate').blur(function (e) {

            $.ajax({
                url: '/Home/UpdateShoppingCart',
                type: 'POST',
                data: getShoppingCartData(),
                dataType: 'json',
                success: function (data) {

                },
                error: function () {
                    alert("error");
                }
            });
        });

    });

    function getShoppingCartData(c) {
        //Convert the form data to a javascript object
        var dataToSubmit = {
            SpecialOrder: c == null ? null : c.checked,
            SpecialDeliveryDate: $('#SpecialDeliveryDate').val()
        };

        return dataToSubmit;
    }


</script>

<style type="text/css">
    .htext {
    font-family: Verdana, Geneva, Arial, Helvetica, sans-serif;
    font-size: 12px;
    color: White;
    text-decoration: none;
}

</style>

<div class="container-fluid">
    <div class="row">
        
        <div class="col-md-4">
            <h1 class="page-header"><span class="glyphicon glyphicon-shopping-cart"></span>&nbsp;&nbsp;@ViewBag.Title</h1>
        </div>
        <!-- /.col-lg-12 -->
        <div class="page-header input-group col-md-6 col-md-offset-6">
            <form action="~/Home/Products"  method="get" class="card card-sm" autocomplete="off">
                <div id="custom-search-input">
                    <div class="input-group col-md-12">
                        <input type="text" class="form-control input-lg" placeholder="Search Item Code / Description" />
                        <span class="input-group-btn">
                            <button class="btn btn-info btn-lg" type="submit">
                                <i class="glyphicon glyphicon-search"></i>
                            </button>
                        </span>
                    </div>
                </div>
            </form>
        </div>
    </div>

@using (Html.BeginForm("SubmitOrders", "Home", FormMethod.Post))
{
    <!-- /.row -->
    <div class="row">
        <table class="table table-striped">
            <tbody>
                <tr>
                    <td colspan="1">
                        <form>
                            <fieldset>
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Store No.:</label>
                                    <div class="col-md-9 inputGroupContainer">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                                            <input id="storeno" name="storeno" class="form-control" value="@Model.StoreNameNo" type="text" disabled>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-3 control-label">Login Name:</label>
                                    <div class="col-md-9 inputGroupContainer">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                            <input id="loginname" name="loginname" class="form-control" value="@Model.Login" type="text" disabled>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-3 control-label">Name:</label>
                                    <div class="col-md-9 inputGroupContainer">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                            <input id="name" name="name" class="form-control" value="@Model.Company" type="text" disabled>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-3 control-label" style="margin-right:15px;">Order Date:</label>
                                    <div class='input-group date' style="width:290px;" id="OrderDate">
                                        <input type="text" class="form-control" disabled/>
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </fieldset>
                        </form>
                    </td>
                    <td colspan="1">
                       

                            <div class="form-group row">
                                <label class="col-md-3 control-label" style="margin-right:15px;">Regular Delivery Date:</label>
                                <div class='input-group date' style="width:290px;" id="regdeldate">
                                    <input id="regdeldate" type="text" class="form-control" value=@( Model.OrderDeliveryDate) disabled/>
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="control-label col-md-3" for="IsSpecialOrder">SpecialOrder</label>
                                <div class="col-sm-6">
                                    @*@Html.CheckBoxFor(m => m.Orders.ShoppingCart.IsSpecialOrder, new { @class = "move-left" })*@
                                    @*@Html.CheckBoxFor(m => m., "IsSpecialOrder",false, new { @class = "move-left", @onclick = "javascript: $('#specdeldate > .form-control').prop('disabled') == true ? $('#specdeldate').data('DateTimePicker').enable() : $('#specdeldate').data('DateTimePicker').disable(); $('#specdeldate').data('DateTimePicker').clear()" })*@
                                    <input class="move-left" type="checkbox" id="IsSpecialOrder" name="IsSpecialOrder" checked="@Model.Orders.ShoppingCart.IsSpecialOrder">
                                    <label class="control-label text-danger" style="font-size:12px"><em> (if checked, specify special delivery date)</em></label>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-3 control-label" style="margin-right:15px;">Special Delivery Date:</label>
                                <div class='input-group date' style="width:290px;" id="specdeldate" name="specdeldate">
                                    @*@Html.TextBoxFor(m => m.Orders.ShoppingCart.SpecialDeliveryDate, Model.Orders.ShoppingCart.IsSpecialOrder ? (object)new { @class = "form-control", @type = "date", Value = Model.Orders.ShoppingCart.SpecialDeliveryDate } : (object)new { @class = "form-control", @type = "date", @value = Model.Orders.ShoppingCart.SpecialDeliveryDate, disabled = "disabled", })*@
                                    <input id="SpecialDeliveryDate" type="text" class="form-control" name="SpecialDeliveryDate" value=@( !Model.Orders.ShoppingCart.IsSpecialOrder ? null : @Model.Orders.ShoppingCart.SpecialDeliveryDate) @( !Model.Orders.ShoppingCart.IsSpecialOrder ? "disabled" : "") />

                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>                       
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="row">
        <div class="col-md-3 ">
        </div>
        <div class="col-md-3 margin-bottom-lg ">
            <button type="submit" class="btn btn-info btn-lg">
                <span class="glyphicon glyphicon-shopping-cart"></span> Submit Orders
            </button>
        </div>
        <div class="margin-bottom-lg">
            <a href="~/Home/OrderByCategory" class="btn btn-info btn-m" style="font-size:23px;"><i class="material-icons">add_shopping_cart</i> Shop More</a>
        </div>
    </div>



    if (Model.Orders.ReferenceForDeliveryPerItem.Count() > 0)
    {
        <div class="row">
            <div class="col-lg-2"></div>
            <div class="col-lg-8">
                <table bordercolor="#cccccc">
                    <tr bgcolor="#31b0d5">
                        <td colspan="3" style="color:white;font-weight:bold;">Reference for Delivery per item. Please remove items conflict below</td>
                    </tr>
                    <tr style="font-weight:bold;text-align:center;">
                        <td width="15%" bgcolor="#eeeeee" #eeeeee"">Item Code</td>
                        <td width="60%" bgcolor="#eeeeee">Item Descriptions</td>
                        <td width="25%" bgcolor="#eeeeee" #eeeeee"">Suggested Delivery Date</td>
                    </tr>
                    @foreach (HaviOnlineOrdering2018.BLL.OrdersBLL.cReferenceForDeliveryPerItem item in Model.Orders.ReferenceForDeliveryPerItem)
                    {
                        <tr>
                            <td style='color:red;font-weight:bold;text-align:center;'>@item.ItemCode</td>
                            <td style='color:red;font-weight:bold;text-align:center;'>@item.ItemDescription</td>
                            <td style='color:red;font-weight:bold;text-align:center;'>@item.SystemSuggestedDelivery</td>
                        </tr>
                    }
                </table>
            </div>
            <div class="col-lg-2"></div>
        </div>

    }

    
    <div class="row">
        
        <div class="col-lg-12">
            <p id="avgp" style="display:none;" class="text-center text-danger"><b>Warning:Item(s) highlighted with this <span style="color:#ee8812">color </span> exceeded your average order quantity.</b></p>
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table class="table table-striped table-bordered table-hover" id="tblCart">
                        <thead>
                            <tr>
                                <th>Item Code</th>
                                <th>Item Description</th>
                                <th>PK</th>
                                <th>CU</th>
                                <th>WT</th>
                                <th>Price (PhP)</th>
                                <th>QTY</th>
                                <th>Avg Order Qty</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
    
                                
                            foreach (HaviOnlineOrdering2018.BLL.OrdersBLL.Cart item in Model.Orders.ShoppingCartItems)
                                {
                                    <tr>
                                        <td><a href="#" id=@item.wrin data-itemcode=@item.wrin data-toggle="modal" data-ng-options="" data-target="#DeletePrompt" tabindex="-1"><span class="glyphicon glyphicon-remove-sign fa-lg"></span></a>&nbsp;&nbsp;@Html.DisplayFor(m => item.wrin)</td>
                                        <td>@item.item_desc</td>
                                        <td>@item.pk</td>
                                        <td>@item.cu</td>
                                        <td>@item.wt</td>
                                        <td>@item.unitprice</td>
                                        <td>@Html.TextBox("row_" + item.wrin, item.qty, new { size=5, id = "row_" + item.wrin, @class="item-input", onkeypress = "return restrictInput(this, event, integerOnly, '', true);", maxlength = "5" })</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3 ">
        </div>
        <div class="col-md-3 margin-bottom-lg ">
            <button type="submit" class="btn btn-info btn-lg">
                <span class="glyphicon glyphicon-shopping-cart"></span> Submit Orders
            </button>
        </div>
        <div class="margin-bottom-lg">
            <a href="~/Home/OrderByCategory" class="btn btn-info btn-m" style="font-size:23px;"><i class="material-icons">add_shopping_cart</i> Shop More</a>
        </div>
    </div>
}


    

    <!-- Modal -->
    <div class="modal fade" id="DeletePrompt" tabindex="-1" role="dialog" aria-labelledby="DeletePromptlabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Delete Confirmation</h4>
                </div>
                <div class="modal-body">
                    <span>Are you sure you want to remove item# <span id="wrin"> </span></span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="confirmdel">Yes</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal -->

</div>
<!-- /.container-fluid -->

@*<script type="text/javascript" src="/scripts/jquery.min.js"></script>*@
<script type="text/javascript" src="/scripts/moment.min.js"></script>
<script type="text/javascript" src="/scripts/bootstrap-datetimepicker.js"></script>
<script type="text/javascript" src="~/Scripts/datatables.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/Content/datatables.min.css" />
<link rel="stylesheet" href="/Content/bootstrap-datetimepicker.css" />




<script type="text/javascript">

    var digitsOnly = /[1234567890]/g;
    var integerOnly = /[0-9\.]/g;
    var alphaOnly = /[A-Za-z]/g;
    var usernameOnly = /[0-9A-Za-z\._-]/g;
    var mobilenumberonly = /^[0-9]{0,}$/g;


    function restrictInput(myfield, e, restrictionType, checkdot, IsMobileNo) {
        if (!e) var e = window.event
        if (e.keyCode) code = e.keyCode;
        else if (e.which) code = e.which;
        var character = String.fromCharCode(code);
        var charcode = e.charCode;
        // if user pressed esc... remove focus from field...
        if (code == 27) { this.blur(); return false; }

        // ignore if the user presses other keys
        // strange because code: 39 is the down key AND ' key...
        // and DEL also equals .

        if (IsMobileNo) {
            if (!e.ctrlKey && code != 9 && code != 8 && code != 46 && code != 37 && code != 39) {
                if (character.match(restrictionType)) {
                    if (checkdot == "checkdot") {
                        return !isNaN(myfield.value.toString() + character);
                    } else {
                        return true;
                    }
                } else {
                    return false;
                }
            }
            else {
                if (e.ctrlKey && code == 97) {
                    return true;
                }
                else {
                    if (charcode != 0) { return false; }
                }
            }
        }
        else {
            if (!e.ctrlKey && code != 9 && code != 8 && code != 36 && code != 37 && code != 38 && (code != 39 || (code == 39 && character == "'")) && code != 40) {
                if (character.match(restrictionType)) {
                    if (checkdot == "checkdot") {
                        return !isNaN(myfield.value.toString() + character);
                    } else {
                        return true;
                    }
                } else {
                    return false;
                }
            }
        }
    }



    var oTable = $('#tblCart').dataTable({
        responsive: true,
        columnDefs: [
            { targets: [-1, -3], className: 'dt-body-right' }
        ],
        columnDefs: [{ responsivePriority: 1, targets: [0, 6] }],
        bPaginate: false,
        initComplete: function (settings) {
            $('tr td')
             .each(function () { // loop through all matched elements
                 $(this).removeAttr("tabindex");
             });
        }

    });
    
    function CheckIfOrderExceed() {
        var OrderExceed = false;
        
        oTable.api().rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            //$($(this.node()).find("a")[0]).css("tabindex", "-1");

            //var mOrderedQty = parseInt($(data[6]).val());
            var mOrderedQty = $($(this.node())[0]).find('input')[0].value;
            var mAvOrderQty = parseInt(data[7]);

            if (mAvOrderQty != null || mAvOrderQty != isNaN) {
                if (mOrderedQty != null && mOrderedQty > mAvOrderQty) {
                    $(this.node()).css("background", "#ee8812");
                    OrderExceed = true;
                }
            }
          
                
            // ... do something with data(), or this.node(), etc
        });
        return OrderExceed;
    }

    

    


</script>
