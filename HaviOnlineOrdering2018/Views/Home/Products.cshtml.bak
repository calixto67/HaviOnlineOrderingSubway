@model HaviOnlineOrdering2018.BLL.CustomerBLL

@{
    ViewBag.Title = "Blank";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/havicustom.js"></script>

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">@ViewData["cat"]</h1>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    <!-- /.row -->
@using (Html.BeginForm("ShoppingCart", "Home", FormMethod.Post))
{
    <div class="row">
        <div class="col-md-4">
        </div>
        <div class="col-md-4">
            <button type="submit" class="btn btn-info btn-lg">
                <span class="glyphicon glyphicon-shopping-cart"></span> Add To Cart
            </button>
        </div>
        <input type="hidden" id="SearchValue" name="SearchValue" value="@Model.Orders.SearchValue" />
    </div>

         <div class="row">
            <div class="col-lg-12">
                <div class="panel-body">
                    <div class="dataTable_wrapper">
                        <table class="table table-striped table-bordered table-hover" id="Products">
                            <thead>
                                <tr>
                                    <th>Item Code</th>
                                    <th>Item Description</th>
                                    <th>PK</th>
                                    <th>CU</th>
                                    <th>WT</th>
                                    <th>UOM</th>
                                    <th>Price (PhP)</th>
                                    <th>QTY</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    foreach (HaviOnlineOrdering2018.BLL.OrdersBLL.Cart item in Model.AllowedItemsOnStore(ViewBag.catid))
                                    {
                                        <tr>
                                            <td tabindex="-1">@item.wrin</td>
                                            <td>@item.item_desc</td>
                                            <td>@item.pk</td>
                                            <td>@item.cu</td>
                                            <td>@item.wt</td>
                                            <td>@item.uom</td>
                                            <td>@item.unitprice</td>
                                            <td>
                                                @Html.TextBox("row_" + item.wrin,null, new { size=5, id = "row_" + item.wrin, onkeypress = "return restrictInput(this, event, integerOnly, '', true);", maxlength="5" } )
                                                @*<input type='text' maxlength="5" id=@("row_" + item.wrin) name=@("row_" + item.wrin) onkeypress="return restrictInput(this, event, integerOnly, '', true);" value="@Html.DisplayFor(m => item.qty)" />*@
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
       
    </div>

    <div class="row">
        <div class="col-md-4">
        </div>
        <div class="col-md-4">
            <button type="submit" class="btn btn-info btn-lg">
                <span class="glyphicon glyphicon-shopping-cart"></span> Add To Cart
            </button>
        </div>
    </div>
}
</div>
<!-- /.container-fluid -->
<link rel="stylesheet" type="text/css" href="~/Content/datatables.min.css" />
<script type="text/javascript" src="~/Scripts/datatables.min.js"></script>

<script type="text/javascript">
    $(function () {
        $('#Products')
				.addClass('nowrap')
				//.dataTable({
				//    responsive: true,
				//    columnDefs: [
				//		{ targets: [-1, -3], className: 'dt-body-right' },
				//    ],
				//    columnDefs: [{ responsivePriority: 1, targets: [0,7] }],
				//    fixedColumns: true
        //});

        $("button[type='submit']").click(function () {
            otable
             .search('')
             .columns().search('')
             .draw();
        });
    
    });

    var otable = $('#Products').dataTable({
        responsive: true,
        columnDefs: [
            { targets: [-1, -3], className: 'dt-body-right' },
        ],
        columnDefs: [{ responsivePriority: 1, targets: [0, 7] }],
        fixedColumns: true,
        initComplete: function (settings) {
            $('tr td')
             .each(function () { // loop through all matched elements
                 $(this).removeAttr("tabindex");
            });
        },
        paging : false
    });
    
    otable.fnFilter($("#SearchValue").val());

    //otable.on('draw.dt', function () {
    //    $('tr td')  
    //     .each(function(){ // loop through all matched elements
    //         $(this).removeAttr("tabindex");  
    //     });
    //})
    

</script>